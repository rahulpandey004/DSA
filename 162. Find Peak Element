class Solution:
    def bsearch(self,nums,high,low):
        if low<=high:
            mid=low+(high-low)//2
            if nums[mid-1]<nums[mid] and nums[mid]>nums[mid+1]:
                return mid
            elif nums[mid-1]<nums[mid]:
                return self.bsearch(nums,high,mid+1)
            else:
                return self.bsearch(nums,mid-1,low)
        return None
    def findPeakElement(self, nums: List[int]) -> int:
        high=len(nums)-2
        low=1
        if len(nums)==1:
            return 0
        if nums[1]<nums[0]:
            return 0
        if nums[len(nums)-2]<nums[len(nums)-1]:
            return len(nums)-1
        return self.bsearch(nums,high,low)
